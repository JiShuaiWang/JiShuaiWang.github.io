<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[负载均衡的实现方式]]></title>
    <url>%2F2019%2F05%2F20%2FLoad-Balance-1%2F</url>
    <content type="text"><![CDATA[记录一下负载均衡实现的几种方式 软件实现 Apache、Nginx、Reverse-proxy、pWEB 硬件实现F5 DNS负载均衡]]></content>
      <categories>
        <category>负载均衡</category>
      </categories>
      <tags>
        <tag>负载均衡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大数据学习路线]]></title>
    <url>%2F2019%2F05%2F07%2Fbd-learning-path%2F</url>
    <content type="text"><![CDATA[大数据整体学习路线]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Leaflet加载各类在线地图]]></title>
    <url>%2F2019%2F04%2F30%2Fgis-leaflet-1%2F</url>
    <content type="text"><![CDATA[Leaflet常用的几种在线地图，加载地址如下，后续将陆续分享使用Leaflet开发WebGIS的相关知识。 地图URLvar baseLayers = { "高德地图": L.tileLayer('http://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}', { subdomains: "1234" }).addTo(map), "高德影像": L.layerGroup([ L.tileLayer('http://webst0{s}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}', { subdomains: "1234" }), L.tileLayer('http://webst0{s}.is.autonavi.com/appmaptile?x={x}&y={y}&z={z}&lang=zh_cn&size=1&scale=1&style=8', { subdomains: "1234" }) ]), "天地图": L.layerGroup([ L.tileLayer('http://t{s}.tianditu.cn/DataServer?T=vec_w&X={x}&Y={y}&L={z}', { subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'] }), L.tileLayer('http://t{s}.tianditu.cn/DataServer?T=cva_w&X={x}&Y={y}&L={z}', { subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'] }) ]), "天地图影像": L.layerGroup([ L.tileLayer('http://t{s}.tianditu.cn/DataServer?T=img_w&X={x}&Y={y}&L={z}', { subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'] }), L.tileLayer('http://t{s}.tianditu.cn/DataServer?T=cia_w&X={x}&Y={y}&L={z}', { subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'] }) ]), "天地图地形": L.layerGroup([ L.tileLayer('http://t{s}.tianditu.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}', { subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'] }), L.tileLayer('http://t{s}.tianditu.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}', { subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'] }) ]), "Google地图": L.tileLayer('http://mt1.google.cn/vt/lyrs=m@207000000&hl=zh-CN&gl=CN&src=app&x={x}&y={y}&z={z}&s=Galile'), "Google影像": L.layerGroup([ L.tileLayer('http://mt1.google.cn/vt/lyrs=s&hl=zh-CN&gl=CN&x={x}&y={y}&z={z}&s=Gali'), L.tileLayer('http://mt1.google.cn/vt/imgtp=png32&lyrs=h@207000000&hl=zh-CN&gl=cn&x={x}&y={y}&z={z}&s=Galil') ]), "GeoQ ": L.tileLayer('http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer/tile/{z}/{y}/{x}'), "GeoQ 藏蓝": L.tileLayer('http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}'), "GeoQ 灰": L.tileLayer('http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}') };]]></content>
      <categories>
        <category>GIS</category>
        <category>Leaflet</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>Leaflet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux虚拟机网卡重启出现 Failed to Start LSB异常]]></title>
    <url>%2F2019%2F04%2F29%2Flinux-q1%2F</url>
    <content type="text"><![CDATA[今天启动Linux虚拟机发现IPV4地址丢失，配置完IP后重启网卡出现 Failed to start LSB异常 解决方案(执行以下步骤) systemctl stop NetworkManager systemctl disable NetworkManager service network restart]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[寻找.李志]]></title>
    <url>%2F2019%2F04%2F29%2Fmusic-find-lizhi%2F</url>
    <content type="text"><![CDATA[即将三十而立的年纪，走在人生的十字路口，不停的寻找生命的意义。 大帅寻找 我在恶心的世界里，寻找一个像你的人在每个想你的夏天里，等另一种感情我在失败的生活里，寻找一个爱我的人我的悲伤，浪漫和幻想，不对她说起我再也不会把自己，愚蠢的交给过去我的生活和我的想法，从此相隔了万里我整夜整夜地失眠，不是为了和谁再相见曾经爱你的每一条街，是我新鲜生活的起点我在陌生的感动里，寻找一个像你的人就算像过去一样被误解，不快乐又如何我在干裂的春天里，寻找一个平凡的人她的善良，甜蜜和阳光，陪伴我自己我再也不会把自己，彻底的交给一个人我的理想就像这黑夜，一分一秒的断裂我一天一天地发呆，不是为了酝酿些什么真情早已经被他们毁灭，还有什么不能去拒绝是否你也在沉默里，寻找一个像我的人在每个想我的季节里，和他们在一起]]></content>
      <categories>
        <category>Music</category>
      </categories>
      <tags>
        <tag>Music</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搞清楚Spark、Storm、MapReduce的区别]]></title>
    <url>%2F2019%2F04%2F29%2Fbd-spark-mapreduce%2F</url>
    <content type="text"><![CDATA[很多初学者在刚刚接触大数据的时候会有很多疑惑，比如对MapReduce、Storm、Spark三个计算框架的理解经常会产生混乱。哪一个适合对大量数据进行处理？哪一个又适合对实时的流数据进行处理？又该如何来区分他们呢？我对比整理了这3个计算框架的基本知识，大家可以了解一下以便对这个3个计算框架有一个整体的认识。 1. MapReduce-分布式离线计算框架主要适用于大批量的集群任务，由于是批量执行，故时效性偏低。原生支持 Java 语言开发 MapReduce ，其它语言需要使用到 Hadoop Streaming 来开发。 2. Spark-快速通用的计算引擎Spark 是专为大规模数据处理而设计的快速通用的计算引擎，其是基于内存的迭代式计算。Spark 保留了MapReduce 的优点，而且在时效性上有了很大提高，从而对需要迭代计算和有较高时效性要求的系统提供了很好的支持。开发人员可以通过Java、Scala或者Python等语言进行数据分析作业编写，并使用超过80种高级运算符。Spark与HDFS全面兼容，同时还能与其它Hadoop组件—包括YARN以及HBase并行协作。Spark可以被用于处理多种作业类型，比如实时数据分析、机器学习与图形处理。多用于能容忍小延时的推荐与计算系统。 3. Storm-分布式实时大数据处理系统Storm是一个分布式的、可靠的、容错的流式计算框架。Storm 一开始就是为实时处理设计，因此在实时分析/性能监测等需要高时效性的领域广泛采用。Storm在理论上支持所有语言，只需要少量代码即可完成适配。Storm把集群的状态存在Zookeeper或者本地磁盘，所以后台进程都是无状态的（不需要保存自己的状态，都在zookeeper上），可以在不影响系统健康运行的同时失败或重启。Storm可应用于–数据流处理、持续计算（持续地向客户端发送数据，它们可以实时的更新以及展现数据，比如网站指标）、分布式远程过程调用（轻松地并行化CPU密集型操作）。]]></content>
      <categories>
        <category>大数据</category>
      </categories>
      <tags>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谁明浪子心]]></title>
    <url>%2F2019%2F04%2F12%2Fmusic-wangjie%2F</url>
    <content type="text"><![CDATA[愿一生勇敢且温柔，有爱可寻亦有梦可追。 可以笑的话不会哭可找到知己哪会孤独偏偏我永没有遇上问我一身足印的风霜怎可结束可以爱的话不退缩可相知的心哪怕追逐可惜每次遇上热爱无法使我感觉我终于遇上幸福你说爱我等于要把我捕捉实在无法担起这一种爱在这夜我又再度漂泊你的痴情请勿继续请你收起一切相信这晚是结局听说太理想的恋爱总不可接触我却哪管千山走遍亦要设法去捕捉听说太理想的一切都不可接触我再置身寂寞路途在那里会有幸福幸福家与国的梦不结束偏偏一颗心抗拒屈服必须要确实领略到就算一生一世也甘心没有局促你说爱我等于要把我捕捉实在无法担起这一种爱在这夜我又再度漂泊你的痴情请勿继续请你收起一切相信这晚是结局听说太理想的恋爱总不可接触我却哪管千山走遍亦要设法去捕捉听说太理想的一切都不可接触我再置身寂寞路途在那里会有幸福听说太理想的恋爱总不可接触我却哪管千山走遍亦要设法去捕捉听说太理想的一切都不可接触我再置身寂寞路途在那里会有幸福幸福]]></content>
      <categories>
        <category>Music</category>
      </categories>
      <tags>
        <tag>Music</tag>
      </tags>
  </entry>
</search>
